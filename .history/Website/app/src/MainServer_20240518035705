// const express = require("express");
// const mongoose = require("mongoose");
// const skinSeller = require("./model/skinSeller.js");

// const cors = require("cors");

// const app = express();
// app.use(cors());
// // MongoDB Connection
// mongoose
//   .connect(
//     "mongodb+srv://Ajitesh:Ajitesh9877@cluster0.yz6u5fv.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0"
//   )
//   .then(() => {
//     console.log("MongoDB Connected");
//   })
//   .catch((err) => {
//     console.error("MongoDB Connection Error:", err);
//   });

// //1st database - SkinId  - Seller
// app.get("/Ajitesh/Buy/:id", async (req, res) => {
//   try {
//     const skinId = req.params.id;

//     console.log("Get Request with skin id - ", skinId);

//     // Find the skin with the given skinId
//     const skin = await skinSeller.findOne({ skinId: skinId });

//     if (!skin) {
//       return res.status(404).json({ message: "Skin not found" });
//     }

//     // Return the username and price of the skin
//     res.json({
//       userName: skin.userName,
//       price: skin.price,
//       WalletAddress: skin.WalletAddress,
//     });
//   } catch (err) {
//     console.log(err);
//     res.status(500).json({ message: err.message });
//   }
// });
// //sell skin by a user
// app.post("/:userName/Sell/:id", async (req, res) => {
//   const skinId = req.params.id;
//   const userName = req.params.userName;
//   console.log("Post Request with userName - ", userName, " skin id - ", skinId);
//   console.log(req.body);

//   try {
//     const newSkinSeller = await skinSeller.create({
//       userName,
//       skinId,
//       price: "200",
//       //req.body.price, // Corrected line
//     });
//     res.status(201).json(newSkinSeller);
//   } catch (err) {
//     console.error(err);
//     res.status(500).json({ message: "Server Error" });
//   }
// });

// const OwnedSkin = require("./model/OwnedSkins.js");

// //2nd Database - Owned Skins
// app.get("/:username/Skin", async (req, res) => {
//   const { username } = req.params;

//   try {
//     // Find all the skins owned by the specified username
//     const ownedSkins = await OwnedSkin.find({ userName: username });

//     // Return the owned skins as JSON response
//     res.json(ownedSkins);
//   } catch (error) {
//     // If an error occurs, return an error response
//     res.status(500).json({ message: error.message });
//   }
// });

// // Route to add a new skin owned by a specific username
// app.post("/:username/Skin", async (req, res) => {
//   const { username } = req.params;
//   const skinId = [1, 2];
//   console.log(skinId);

//   try {
//     // Create a new OwnedSkin document with the provided username and skinId
//     const OwnedSkin = await OwnedSkin.create({
//       userName,
//       skinId,
//     });

//     // Save the newOwnedSkin document to the database
//     const savedOwnedSkin = await OwnedSkin.save();

//     // Return the savedOwnedSkin as JSON response
//     res.status(201).json(savedOwnedSkin);
//   } catch (error) {
//     // If an error occurs, return an error response
//     res.status(400).json({ message: error.message });
//   }
// });
// app.put("/:username/Skin", async (req, res) => {
//   const { username } = req.params;
//   const { skinId } = req.body;

//   try {
//     // Create a new OwnedSkin document with the provided username and skinId
//     const newOwnedSkin = new OwnedSkin({
//       userName: username,
//       skinId: skinId,
//     });

//     // Save the newOwnedSkin document to the database
//     const savedOwnedSkin = await newOwnedSkin.save();

//     // Return the savedOwnedSkin as JSON response
//     res.status(201).json(savedOwnedSkin);
//   } catch (error) {
//     // If an error occurs, return an error response
//     res.status(400).json({ message: error.message });
//   }
// });
// // Start the server
// const PORT = process.env.PORT || 5001;
// app.listen(PORT, () => {
//   console.log(`Server is running on port ${PORT}`);
// });

const express = require("express");
const mongoose = require("mongoose");
const skinSeller = require("./model/skinSeller.js");

const cors = require("cors");

const app = express();
app.use(cors());
app.use(express.json()); // Middleware to parse JSON bodies

// MongoDB Connection
mongoose
  .connect(
    "mongodb+srv://Ajitesh:Ajitesh9877@cluster0.yz6u5fv.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0"
  )
  .then(() => {
    console.log("MongoDB Connected");
  })
  .catch((err) => {
    console.error("MongoDB Connection Error:", err);
  });

//1st database - SkinId  - Seller
app.get("/Ajitesh/Buy/:id", async (req, res) => {
  try {
    const skinId = req.params.id;

    console.log("Get Request with skin id - ", skinId);

    // Find the skin with the given skinId
    const skin = await skinSeller.findOne({ skinId: skinId });

    if (!skin) {
      return res.status(404).json({ message: "Skin not found" });
    }

    // Return the username and price of the skin
    res.json({
      userName: skin.userName,
      price: skin.price,
      WalletAddress: skin.WalletAddress,
    });
  } catch (err) {
    console.log(err);
    res.status(500).json({ message: err.message });
  }
});

//sell skin by a user
app.post("/:userName/Sell/:id", async (req, res) => {
  const skinId = req.params.id;
  const userName = req.params.userName;
  console.log("Post Request with userName - ", userName, " skin id - ", skinId);
  console.log(req.body);

  try {
    const newSkinSeller = await skinSeller.create({
      userName,
      skinId,
      price: "200",
      //req.body.price, // Corrected line
    });
    res.status(201).json(newSkinSeller);
  } catch (err) {
    console.error(err);
    res.status(500).json({ message: "Server Error" });
  }
});

const OwnedSkin = require("./model/OwnedSkins.js");

//2nd Database - Owned Skins
app.get("/:username/Skin", async (req, res) => {
  const { username } = req.params;

  try {
    // Find all the skins owned by the specified username
    const ownedSkins = await OwnedSkin.find({ userName: username });

    // Return the owned skins as JSON response
    res.json(ownedSkins);
  } catch (error) {
    // If an error occurs, return an error response
    res.status(500).json({ message: error.message });
  }
});

// Route to add a new skin owned by a specific username
app.post("/:username/Skin", async (req, res) => {
  const { username } = req.params;
  const skinId = [1, 2];
  console.log(skinId);

  try {
    // Create a new OwnedSkin document with the provided username and skinId
    const newOwnedSkin = await OwnedSkin.create({
      uerName: username,
      skinId: skinId,
    });

    // Save the newOwnedSkin document to the database
    const savedOwnedSkin = await newOwnedSkin.save();

    // Return the savedOwnedSkin as JSON response
    res.status(201).json(savedOwnedSkin);
  } catch (error) {
    // If an error occurs, return an error response
    res.status(400).json({ message: error.message });
  }
});

// Route to add a new skin owned by a specific username (using PUT request)
app.put("/:username/Skin", async (req, res) => {
  const { username } = req.params;
  const { skinId } = req.body;

  try {
    // Create a new OwnedSkin document with the provided username and skinId
    const newOwnedSkinInstance = new OwnedSkin({
      userName: username,
      skinId: skinId,
    });

    // Save the newOwnedSkin document to the database
    const savedOwnedSkin = await newOwnedSkinInstance.save();

    // Return the savedOwnedSkin as JSON response
    res.status(201).json(savedOwnedSkin);
  } catch (error) {
    // If an error occurs, return an error response
    res.status(400).json({ message: error.message });
  }
});

// Start the server
const PORT = process.env.PORT || 5001;
app.listen(PORT, () => {
  console.log(`Server is running on port ${PORT}`);
});
