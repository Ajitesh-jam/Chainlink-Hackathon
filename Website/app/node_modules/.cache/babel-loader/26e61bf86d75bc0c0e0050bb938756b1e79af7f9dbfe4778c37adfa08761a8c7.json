{"ast":null,"code":"var _jsxFileName = \"/Users/ajiteshjamulkar/Desktop/Chainlink-Hackathon/Website/app/src/components/SellSkinPage.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState ,useEffect,useRef} from 'react';\n// import axios from 'axios'; // Make sure to import axios for making HTTP requests\n// import Web3 from \"web3\";\n// import { useParams } from 'react-router-dom';\n\n// //let web3 = new Web3(window.ethereum); //Sepolia\n\n// let web3 = new Web3(new Web3.providers.HttpProvider(\"HTTP://127.0.0.1:7545\")); //Ganache\n// function SellSkin(props) {\n\n//   const { userName, skinId } = useParams();\n//   const avgPriceRef = useRef(0); \n\n//   const [price, setPrice] = useState(0);\n//   let connectedAccount;\n\n//   useEffect(() => {\n//     async function fetchSkins() {\n//       try {\n//         const url = `http://localhost:5001/${skinId}`;\n//         const res = await axios.get(url);\n//         const data = res.data;\n//         if (Array.isArray(data)) {\n//           console.log(data);\n//           let sumPrice = 0; // Declare sumPrice inside useEffect\n//           for (let i = 0; i < data.length; i++) {\n//             sumPrice += data[i].price;\n//           }\n//           console.log(\"sumPrice -- \", sumPrice);\n//           //print Avg\n//           console.log(\"Avg price -- \", sumPrice / data.length);\n\n//           // Assign sumPrice to sumPriceRef.current to persist its value across renders\n//           avgPriceRef.current = sumPrice / data.length;\n\n//         } else {\n\n//           console.log('Expected an array but got:', typeof data);\n//         }\n//       } catch (e) {\n//         console.log(\"Error fetching skins: \", e);\n//       }\n//     }\n//     fetchSkins();\n//   }, [skinId]);//Taaki ek hi baar call ho\n\n//   async function connectWallet() {\n//     return web3.eth.getAccounts().then((accounts) => {\n\n//       return accounts[0];\n//     });\n//   }\n\n//   async function sellSkin(event) {\n//     event.preventDefault(); // Prevent form submission\n//     connectedAccount=await connectWallet();\n//     console.log(\"connectedAccount -- \",connectedAccount);\n\n//     //show the current avg price \n\n//     try {\n//         const url = `http://localhost:5001/${userName}/Sell/${skinId}`;\n//         const response = await axios.post(url, {\n//           price: price, // Sending only the price in the request body\n//           WalletAddress:connectedAccount\n//         });\n\n//         console.log(response.data); // Log response data\n\n//         //delete skin from user;\n//         const url1 = `http://localhost:5001/${userName}/Skin/${skinId}`;\n//         const response1 = await axios.put(url1);\n//         console.log(response1.data); // Log response data\n\n//       } catch (error) {\n//         console.error(\"Error\", error.message);\n//       }\n\n//   }\n\n//   return (\n//     <>\n//     <div className=\"container\">\n//       <h1>Sell Skin</h1>\n//       <p>Avg price: {avgPriceRef.current}</p>\n//       <p>Enter price to sell</p>\n\n//       <input\n//         type='number'\n//         value={price}\n//         onChange={(e) => setPrice(e.target.value)} // Update price state when input changes\n//         placeholder=\"Enter price\"\n//       />\n//       <br />\n//       <button onClick={sellSkin}>Sell Skin</button>\n//     </div>\n//     </>\n//   );\n// }\n\n// export default SellSkin;\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport Web3 from \"web3\";\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SellSkin(props) {\n  _s();\n  const {\n    userName,\n    skinId\n  } = useParams();\n  const avgPriceRef = useRef(0);\n  const [price, setPrice] = useState(0);\n  useEffect(() => {\n    async function fetchSkins() {\n      try {\n        const url = `http://localhost:5001/${skinId}`;\n        const res = await axios.get(url);\n        const data = res.data;\n        if (Array.isArray(data)) {\n          let sumPrice = data.reduce((acc, curr) => acc + curr.price, 0);\n          avgPriceRef.current = sumPrice / data.length;\n        } else {\n          console.log('Expected an array but got:', typeof data);\n        }\n      } catch (e) {\n        console.log(\"Error fetching skins: \", e);\n      }\n    }\n    fetchSkins();\n  }, [skinId]);\n  async function connectWallet() {\n    const web3 = new Web3(new Web3.providers.HttpProvider(\"HTTP://127.0.0.1:7545\"));\n    const accounts = await web3.eth.getAccounts();\n    return accounts[4];\n  }\n  async function sellSkin(event) {\n    event.preventDefault();\n    const connectedAccount = await connectWallet();\n    console.log(\"Wallet Address -- \", connectedAccount, \"Price - \", price, \"UserNAme  : \", userName);\n    try {\n      //1st database update\n      const url = `http://localhost:5001/${userName}/Sell/${skinId}`;\n      const response = await axios.post(url, {\n        price: price,\n        WalletAddress: connectedAccount\n      });\n      console.log(response.data);\n      const url1 = `http://localhost:5001/${userName}/Skin/${skinId}`;\n      const response1 = await axios.put(url1);\n      console.log(response1.data);\n    } catch (error) {\n      console.error(\"Error\", error.message);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sell Skin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Avg price: \", avgPriceRef.current]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Enter price to sell\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: price,\n      onChange: e => setPrice(e.target.value),\n      placeholder: \"Enter price\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sellSkin,\n      children: \"Sell Skin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this);\n}\n_s(SellSkin, \"8r21vOPg5WrRX2tsh8o59TFzL6c=\", false, function () {\n  return [useParams];\n});\n_c = SellSkin;\nexport default SellSkin;\nvar _c;\n$RefreshReg$(_c, \"SellSkin\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","Web3","useParams","jsxDEV","_jsxDEV","SellSkin","props","_s","userName","skinId","avgPriceRef","price","setPrice","fetchSkins","url","res","get","data","Array","isArray","sumPrice","reduce","acc","curr","current","length","console","log","e","connectWallet","web3","providers","HttpProvider","accounts","eth","getAccounts","sellSkin","event","preventDefault","connectedAccount","response","post","WalletAddress","url1","response1","put","error","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/ajiteshjamulkar/Desktop/Chainlink-Hackathon/Website/app/src/components/SellSkinPage.jsx"],"sourcesContent":["// import React, { useState ,useEffect,useRef} from 'react';\n// import axios from 'axios'; // Make sure to import axios for making HTTP requests\n// import Web3 from \"web3\";\n// import { useParams } from 'react-router-dom';\n\n// //let web3 = new Web3(window.ethereum); //Sepolia\n\n// let web3 = new Web3(new Web3.providers.HttpProvider(\"HTTP://127.0.0.1:7545\")); //Ganache\n// function SellSkin(props) {\n\n//   const { userName, skinId } = useParams();\n//   const avgPriceRef = useRef(0); \n\n\n//   const [price, setPrice] = useState(0);\n//   let connectedAccount;\n\n\n//   useEffect(() => {\n//     async function fetchSkins() {\n//       try {\n//         const url = `http://localhost:5001/${skinId}`;\n//         const res = await axios.get(url);\n//         const data = res.data;\n//         if (Array.isArray(data)) {\n//           console.log(data);\n//           let sumPrice = 0; // Declare sumPrice inside useEffect\n//           for (let i = 0; i < data.length; i++) {\n//             sumPrice += data[i].price;\n//           }\n//           console.log(\"sumPrice -- \", sumPrice);\n//           //print Avg\n//           console.log(\"Avg price -- \", sumPrice / data.length);\n          \n//           // Assign sumPrice to sumPriceRef.current to persist its value across renders\n//           avgPriceRef.current = sumPrice / data.length;\n          \n//         } else {\n          \n//           console.log('Expected an array but got:', typeof data);\n//         }\n//       } catch (e) {\n//         console.log(\"Error fetching skins: \", e);\n//       }\n//     }\n//     fetchSkins();\n//   }, [skinId]);//Taaki ek hi baar call ho\n\n//   async function connectWallet() {\n//     return web3.eth.getAccounts().then((accounts) => {\n\n\n//       return accounts[0];\n//     });\n//   }\n\n\n\n\n//   async function sellSkin(event) {\n//     event.preventDefault(); // Prevent form submission\n//     connectedAccount=await connectWallet();\n//     console.log(\"connectedAccount -- \",connectedAccount);\n\n//     //show the current avg price \n\n//     try {\n//         const url = `http://localhost:5001/${userName}/Sell/${skinId}`;\n//         const response = await axios.post(url, {\n//           price: price, // Sending only the price in the request body\n//           WalletAddress:connectedAccount\n//         });\n\n//         console.log(response.data); // Log response data\n\n//         //delete skin from user;\n//         const url1 = `http://localhost:5001/${userName}/Skin/${skinId}`;\n//         const response1 = await axios.put(url1);\n//         console.log(response1.data); // Log response data\n\n//       } catch (error) {\n//         console.error(\"Error\", error.message);\n//       }\n\n//   }\n\n//   return (\n//     <>\n//     <div className=\"container\">\n//       <h1>Sell Skin</h1>\n//       <p>Avg price: {avgPriceRef.current}</p>\n//       <p>Enter price to sell</p>\n\n//       <input\n//         type='number'\n//         value={price}\n//         onChange={(e) => setPrice(e.target.value)} // Update price state when input changes\n//         placeholder=\"Enter price\"\n//       />\n//       <br />\n//       <button onClick={sellSkin}>Sell Skin</button>\n//     </div>\n//     </>\n//   );\n// }\n\n// export default SellSkin;\n\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport Web3 from \"web3\";\nimport { useParams } from 'react-router-dom';\n\nfunction SellSkin(props) {\n  const { userName, skinId } = useParams();\n  const avgPriceRef = useRef(0);\n  const [price, setPrice] = useState(0);\n  \n  useEffect(() => {\n    async function fetchSkins() {\n      try {\n        const url = `http://localhost:5001/${skinId}`;\n        const res = await axios.get(url);\n        const data = res.data;\n        \n        if (Array.isArray(data)) {\n          let sumPrice = data.reduce((acc, curr) => acc + curr.price, 0);\n          avgPriceRef.current = sumPrice / data.length;\n        } else {\n          console.log('Expected an array but got:', typeof data);\n        }\n      } catch (e) {\n        console.log(\"Error fetching skins: \", e);\n      }\n    }\n    \n    fetchSkins();\n  }, [skinId]);\n  \n  async function connectWallet() {\n    const web3 = new Web3(new Web3.providers.HttpProvider(\"HTTP://127.0.0.1:7545\"));\n    const accounts = await web3.eth.getAccounts();\n    return accounts[4];\n  }\n\n  async function sellSkin(event) {\n    event.preventDefault();\n    const connectedAccount = await connectWallet();\n    console.log(\"Wallet Address -- \", connectedAccount,\"Price - \",price,\"UserNAme  : \",userName);\n    try {\n      //1st database update\n      const url = `http://localhost:5001/${userName}/Sell/${skinId}`;\n      const response = await axios.post(url, {\n        price: price,\n        WalletAddress: connectedAccount\n      });\n\n      console.log(response.data);\n\n      const url1 = `http://localhost:5001/${userName}/Skin/${skinId}`;\n      const response1 = await axios.put(url1);\n      console.log(response1.data);\n\n    } catch (error) {\n      console.error(\"Error\", error.message);\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>Sell Skin</h1>\n      <p>Avg price: {avgPriceRef.current}</p>\n      <p>Enter price to sell</p>\n\n      <input\n        type='number'\n        value={price}\n        onChange={(e) => setPrice(e.target.value)}\n        placeholder=\"Enter price\"\n      />\n      <br />\n      <button onClick={sellSkin}>Sell Skin</button>\n    </div>\n  );\n}\n\nexport default SellSkin;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}