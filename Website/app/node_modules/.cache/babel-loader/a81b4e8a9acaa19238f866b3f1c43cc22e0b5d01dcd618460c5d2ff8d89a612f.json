{"ast":null,"code":"var _jsxFileName = \"/Users/ajiteshjamulkar/Desktop/Chainlink-Hackathon/Website/app/src/components/BuySkinPage.jsx\",\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport contractABI from \"../abi1.json\";\nimport Web3 from \"web3\";\nimport axios from 'axios'; // Make sure to import axios for making HTTP requests\nimport skinImg from \"./assets/Woman-skirt.png\";\nimport { useParams } from 'react-router-dom';\n\n//Ek skin buy karney wala dashbord\n\n//let web3 = new Web3(window.ethereum); //Sepolia\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet web3 = new Web3(new Web3.providers.HttpProvider(\"HTTP://127.0.0.1:7545\")); //Ganache\n//window.ethereum\n\nfunction BuyDash(props) {\n  _s2();\n  var _s = $RefreshSig$();\n  //console.log(\"wallet Address - \",props.WalletAddress);\n  const contractAddress = \"0x5070ee85A360899882E907c213cb7147c14466D4\"; // ganache address\n  // \"0xb346d01c452a91f19895F5f26Ef845C1DE87b398\"; //Sepolia address\n  let [connectedAccount, setConnectedAccount] = useState(props.WalletAddress);\n  let [gameCompany, setGameCompany] = useState(\"\");\n  let seller;\n  async function connectWallet() {\n    web3.eth.getAccounts().then(accounts => {\n      setConnectedAccount(accounts[0]);\n      connectedAccount = accounts[0];\n      setGameCompany(accounts[8]);\n      gameCompany = accounts[8];\n      console.log(\"Connected account:\", accounts[0]);\n      console.log(\"gameCompany -- \", gameCompany);\n    });\n    // if (window.ethereum) {\n    //   try {\n    //     // Request access to MetaMask accounts\n    //     const accounts = await window.ethereum.request({\n    //       method: \"eth_requestAccounts\",\n    //     });\n    //     if (accounts.length > 0) {\n    //       setConnectedAccount(accounts[0]);\n    //       console.log(\"Connected account:\", accounts[0]);\n    //       setSeller(accounts[2]);\n    //       setGameCompany(accounts[1]);\n    //       console.log(\"seller -- \", seller);\n    //       console.log(\"gameCompany -- \", gameCompany);\n    //       // Initialize Web3 and contract here if needed\n    //     }\n    //   } catch (error) {\n    //     if (error.code === 4001) {\n    //       console.log(\"User rejected account access\");\n    //     } else {\n    //       console.error(\"Error:\", error);\n    //     }\n    //   }\n    // } else {\n    //   console.error(\"MetaMask not found\");\n    // }\n  }\n  function shortAddress(address, startLength = 6, endLength = 4) {\n    return `${address.slice(0, startLength)}...${address.slice(-endLength)}`;\n  }\n  async function BuyConfirmed(id) {\n    console.log(\"Buy Confirmed\");\n    try {\n      // Delete the skin from the skinSeller collection\n      await axios.delete(`http://localhost:5001/Suvojit/Buy/${id}`);\n\n      // Update the OwnedSkin collection with the purchased skin ID\n      await axios.put(`http://localhost:5001/Ajitesh/Skin`, {\n        skinIds: [id] // Wrap id in an array if it's not already an array\n      });\n      console.log(\"Skin deleted and OwnedSkin updated successfully.\");\n    } catch (error) {\n      console.error(\"Error:\", error.message);\n    }\n  }\n  async function BuySkin(event) {\n    _s();\n    event.preventDefault(); // Prevent form submission\n    const {\n      id\n    } = useParams();\n    console.log(\"Buy Skin\");\n    connectWallet();\n    try {\n      const url = `http://localhost:5001/${id}`;\n      const res = axios.get(url);\n      console.log(res.data);\n    } catch (e) {\n      console.log(\"Error \");\n    }\n\n    // try {\n    //   // Get the skin ID from the form input\n\n    //   const url = `http://localhost:5001/Suvojit/Buy/${id}`;\n    //   const response = await axios.get(url);\n    //   console.log(response.data);\n    //   const contract = new web3.eth.Contract(contractABI, contractAddress);\n    //   const amountInWei = web3.utils.toWei(response.data.price.toString(), \"ether\");// Amount to send in wei\n    //   const gasPrice = await web3.eth.getGasPrice(); // Get current gas price\n    //   console.log(\"Connected Account: \", connectedAccount);\n    //   console.log(\"Amount in Wei: \", amountInWei);\n    //   console.log(\"Seller - \", response.data.WalletAddress);\n    //   console.log(\"Game Company - \", gameCompany);\n    //   console.log(\"Contract Start- \");\n    //   try {\n    //     const gasLimit = await contract.methods\n    //       .Buy(response.data.WalletAddress, gameCompany)\n    //       .estimateGas({\n    //         from: connectedAccount,\n    //         value: amountInWei,\n    //       });\n\n    //     await contract.methods\n    //       .Buy(response.data.WalletAddress, gameCompany)\n    //       .send({\n    //         from: connectedAccount,\n    //         value: amountInWei,\n    //         gas: gasLimit,\n    //         gasPrice: gasPrice,\n    //       })\n    //       .on(\"receipt\", (receipt) => {\n    //         console.log(\"Transaction receipt:\", receipt);\n    //         console.log(\"Transaction hash:\", receipt.transactionHash);\n    //       })\n    //       .on(\"error\", (error) => {\n    //         console.error(\"Transaction error:\", error);\n    //       });\n    //   } catch (e) {\n    //     console.error(\"blockchain error- \", e);\n    //   }\n    // } catch (error) {\n    //   console.error(\"Buy Error\", error.message);\n    // } \n    BuyConfirmed(id);\n  }\n  _s(BuySkin, \"r5uZNI/QgQLJ6YUN+rmQ/OIgZ/k=\", false, function () {\n    return [useParams];\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: connectWallet,\n        children: \"Connect Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), connectedAccount && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Connected: \", shortAddress(connectedAccount)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: skinImg,\n      alt: \"Skin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: event => BuySkin(event),\n      children: \"Buy Skin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: BuyConfirmed,\n      children: \"Buy Confirmed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s2(BuyDash, \"EPLJ8vZcvvkHLSnHRII3hyzG7A0=\");\n_c = BuyDash;\nexport default BuyDash;\nvar _c;\n$RefreshReg$(_c, \"BuyDash\");","map":{"version":3,"names":["React","useState","contractABI","Web3","axios","skinImg","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","web3","providers","HttpProvider","BuyDash","props","_s2","_s","$RefreshSig$","contractAddress","connectedAccount","setConnectedAccount","WalletAddress","gameCompany","setGameCompany","seller","connectWallet","eth","getAccounts","then","accounts","console","log","shortAddress","address","startLength","endLength","slice","BuyConfirmed","id","delete","put","skinIds","error","message","BuySkin","event","preventDefault","url","res","get","data","e","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["/Users/ajiteshjamulkar/Desktop/Chainlink-Hackathon/Website/app/src/components/BuySkinPage.jsx"],"sourcesContent":["import React ,{useState }from 'react';\nimport contractABI from \"../abi1.json\";\nimport Web3 from \"web3\";\nimport axios from 'axios'; // Make sure to import axios for making HTTP requests\nimport skinImg from \"./assets/Woman-skirt.png\";\nimport { useParams } from 'react-router-dom';\n\n\n//Ek skin buy karney wala dashbord\n\n\n//let web3 = new Web3(window.ethereum); //Sepolia\n\nlet web3 = new Web3(new Web3.providers.HttpProvider(\"HTTP://127.0.0.1:7545\")); //Ganache\n//window.ethereum\n\nfunction BuyDash(props) {\n    //console.log(\"wallet Address - \",props.WalletAddress);\n    const contractAddress =\n    \"0x5070ee85A360899882E907c213cb7147c14466D4\";// ganache address\n   // \"0xb346d01c452a91f19895F5f26Ef845C1DE87b398\"; //Sepolia address\n  let [connectedAccount, setConnectedAccount] = useState(props.WalletAddress);\n  let [gameCompany, setGameCompany] = useState(\"\");\n  let seller;\n\n\n\n  async function connectWallet() {\n    web3.eth.getAccounts().then((accounts) => {\n      setConnectedAccount(accounts[0]);\n      connectedAccount=accounts[0];\n\n      setGameCompany(accounts[8]);\n      gameCompany=accounts[8];\n\n      console.log(\"Connected account:\", accounts[0]);\n      console.log(\"gameCompany -- \", gameCompany);\n    });\n    // if (window.ethereum) {\n    //   try {\n    //     // Request access to MetaMask accounts\n    //     const accounts = await window.ethereum.request({\n    //       method: \"eth_requestAccounts\",\n    //     });\n    //     if (accounts.length > 0) {\n    //       setConnectedAccount(accounts[0]);\n    //       console.log(\"Connected account:\", accounts[0]);\n    //       setSeller(accounts[2]);\n    //       setGameCompany(accounts[1]);\n    //       console.log(\"seller -- \", seller);\n    //       console.log(\"gameCompany -- \", gameCompany);\n    //       // Initialize Web3 and contract here if needed\n    //     }\n    //   } catch (error) {\n    //     if (error.code === 4001) {\n    //       console.log(\"User rejected account access\");\n    //     } else {\n    //       console.error(\"Error:\", error);\n    //     }\n    //   }\n    // } else {\n    //   console.error(\"MetaMask not found\");\n    // }\n  }\n\n  function shortAddress(address, startLength = 6, endLength = 4) {\n    return `${address.slice(0, startLength)}...${address.slice(-endLength)}`;\n  }\n  async function BuyConfirmed(id){\n    \n      console.log(\"Buy Confirmed\");\n    \n      try {\n        // Delete the skin from the skinSeller collection\n        await axios.delete(`http://localhost:5001/Suvojit/Buy/${id}`);\n    \n        // Update the OwnedSkin collection with the purchased skin ID\n        await axios.put(`http://localhost:5001/Ajitesh/Skin`, {\n          skinIds: [id] // Wrap id in an array if it's not already an array\n        });\n    \n        console.log(\"Skin deleted and OwnedSkin updated successfully.\");\n      } catch (error) {\n        console.error(\"Error:\", error.message);\n      }\n\n  }\n \n  async function BuySkin(event) {\n\n    event.preventDefault(); // Prevent form submission\n    const {id}=useParams();\n    console.log(\"Buy Skin\");\n    connectWallet();\n    try{\n      const url=`http://localhost:5001/${id}`;\n      const res= axios.get(url);\n      console.log(res.data);\n\n\n\n\n    }catch(e){\n      console.log(\"Error \");\n    }\n\n\n\n    // try {\n    //   // Get the skin ID from the form input\n      \n    //   const url = `http://localhost:5001/Suvojit/Buy/${id}`;\n    //   const response = await axios.get(url);\n    //   console.log(response.data);\n    //   const contract = new web3.eth.Contract(contractABI, contractAddress);\n    //   const amountInWei = web3.utils.toWei(response.data.price.toString(), \"ether\");// Amount to send in wei\n    //   const gasPrice = await web3.eth.getGasPrice(); // Get current gas price\n    //   console.log(\"Connected Account: \", connectedAccount);\n    //   console.log(\"Amount in Wei: \", amountInWei);\n    //   console.log(\"Seller - \", response.data.WalletAddress);\n    //   console.log(\"Game Company - \", gameCompany);\n    //   console.log(\"Contract Start- \");\n    //   try {\n    //     const gasLimit = await contract.methods\n    //       .Buy(response.data.WalletAddress, gameCompany)\n    //       .estimateGas({\n    //         from: connectedAccount,\n    //         value: amountInWei,\n    //       });\n\n    //     await contract.methods\n    //       .Buy(response.data.WalletAddress, gameCompany)\n    //       .send({\n    //         from: connectedAccount,\n    //         value: amountInWei,\n    //         gas: gasLimit,\n    //         gasPrice: gasPrice,\n    //       })\n    //       .on(\"receipt\", (receipt) => {\n    //         console.log(\"Transaction receipt:\", receipt);\n    //         console.log(\"Transaction hash:\", receipt.transactionHash);\n    //       })\n    //       .on(\"error\", (error) => {\n    //         console.error(\"Transaction error:\", error);\n    //       });\n    //   } catch (e) {\n    //     console.error(\"blockchain error- \", e);\n    //   }\n    // } catch (error) {\n    //   console.error(\"Buy Error\", error.message);\n    // } \n    BuyConfirmed(id);\n}\n  \n \n  return (<>\n  \n      <div className=\"App\">\n        <button onClick={connectWallet}>Connect Wallet</button>\n        {connectedAccount && (\n          <div>\n            <p>Connected: {shortAddress(connectedAccount)}</p>\n            {/* Add more UI elements or actions here */}\n          </div>\n        )}\n        </div>\n\n        <img src={skinImg} alt=\"Skin\" />\n\n        \n    \n\n      <br></br>\n      <button onClick={(event) => BuySkin(event)}>Buy Skin</button>\n      <button onClick={BuyConfirmed}>Buy Confirmed</button>\n      <br></br>\n\n  </>\n  );\n}\n\nexport default BuyDash;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,WAAW,MAAM,cAAc;AACtC,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;AAC3B,OAAOC,OAAO,MAAM,0BAA0B;AAC9C,SAASC,SAAS,QAAQ,kBAAkB;;AAG5C;;AAGA;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEA,IAAIC,IAAI,GAAG,IAAIR,IAAI,CAAC,IAAIA,IAAI,CAACS,SAAS,CAACC,YAAY,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC;AAC/E;;AAEA,SAASC,OAAOA,CAACC,KAAK,EAAE;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EACpB;EACA,MAAMC,eAAe,GACrB,4CAA4C,CAAC;EAC9C;EACD,IAAI,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGpB,QAAQ,CAACc,KAAK,CAACO,aAAa,CAAC;EAC3E,IAAI,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAChD,IAAIwB,MAAM;EAIV,eAAeC,aAAaA,CAAA,EAAG;IAC7Bf,IAAI,CAACgB,GAAG,CAACC,WAAW,CAAC,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;MACxCT,mBAAmB,CAACS,QAAQ,CAAC,CAAC,CAAC,CAAC;MAChCV,gBAAgB,GAACU,QAAQ,CAAC,CAAC,CAAC;MAE5BN,cAAc,CAACM,QAAQ,CAAC,CAAC,CAAC,CAAC;MAC3BP,WAAW,GAACO,QAAQ,CAAC,CAAC,CAAC;MAEvBC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEF,QAAQ,CAAC,CAAC,CAAC,CAAC;MAC9CC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAET,WAAW,CAAC;IAC7C,CAAC,CAAC;IACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACF;EAEA,SAASU,YAAYA,CAACC,OAAO,EAAEC,WAAW,GAAG,CAAC,EAAEC,SAAS,GAAG,CAAC,EAAE;IAC7D,OAAQ,GAAEF,OAAO,CAACG,KAAK,CAAC,CAAC,EAAEF,WAAW,CAAE,MAAKD,OAAO,CAACG,KAAK,CAAC,CAACD,SAAS,CAAE,EAAC;EAC1E;EACA,eAAeE,YAAYA,CAACC,EAAE,EAAC;IAE3BR,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;IAE5B,IAAI;MACF;MACA,MAAM5B,KAAK,CAACoC,MAAM,CAAE,qCAAoCD,EAAG,EAAC,CAAC;;MAE7D;MACA,MAAMnC,KAAK,CAACqC,GAAG,CAAE,oCAAmC,EAAE;QACpDC,OAAO,EAAE,CAACH,EAAE,CAAC,CAAC;MAChB,CAAC,CAAC;MAEFR,OAAO,CAACC,GAAG,CAAC,kDAAkD,CAAC;IACjE,CAAC,CAAC,OAAOW,KAAK,EAAE;MACdZ,OAAO,CAACY,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAACC,OAAO,CAAC;IACxC;EAEJ;EAEA,eAAeC,OAAOA,CAACC,KAAK,EAAE;IAAA7B,EAAA;IAE5B6B,KAAK,CAACC,cAAc,CAAC,CAAC,CAAC,CAAC;IACxB,MAAM;MAACR;IAAE,CAAC,GAACjC,SAAS,CAAC,CAAC;IACtByB,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;IACvBN,aAAa,CAAC,CAAC;IACf,IAAG;MACD,MAAMsB,GAAG,GAAE,yBAAwBT,EAAG,EAAC;MACvC,MAAMU,GAAG,GAAE7C,KAAK,CAAC8C,GAAG,CAACF,GAAG,CAAC;MACzBjB,OAAO,CAACC,GAAG,CAACiB,GAAG,CAACE,IAAI,CAAC;IAKvB,CAAC,QAAMC,CAAC,EAAC;MACPrB,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACvB;;IAIA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAM,YAAY,CAACC,EAAE,CAAC;EACpB;EAACtB,EAAA,CAhEgB4B,OAAO;IAAA,QAGTvC,SAAS;EAAA;EAgEtB,oBAAQE,OAAA,CAAAE,SAAA;IAAA2C,QAAA,gBAEJ7C,OAAA;MAAK8C,SAAS,EAAC,KAAK;MAAAD,QAAA,gBAClB7C,OAAA;QAAQ+C,OAAO,EAAE7B,aAAc;QAAA2B,QAAA,EAAC;MAAc;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACtDvC,gBAAgB,iBACfZ,OAAA;QAAA6C,QAAA,eACE7C,OAAA;UAAA6C,QAAA,GAAG,aAAW,EAACpB,YAAY,CAACb,gBAAgB,CAAC;QAAA;UAAAoC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAE/C,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,eAENnD,OAAA;MAAKoD,GAAG,EAAEvD,OAAQ;MAACwD,GAAG,EAAC;IAAM;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAKlCnD,OAAA;MAAAgD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTnD,OAAA;MAAQ+C,OAAO,EAAGT,KAAK,IAAKD,OAAO,CAACC,KAAK,CAAE;MAAAO,QAAA,EAAC;IAAQ;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC7DnD,OAAA;MAAQ+C,OAAO,EAAEjB,YAAa;MAAAe,QAAA,EAAC;IAAa;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACrDnD,OAAA;MAAAgD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eAEX,CAAC;AAEL;AAAC3C,GAAA,CAnKQF,OAAO;AAAAgD,EAAA,GAAPhD,OAAO;AAqKhB,eAAeA,OAAO;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}