{"ast":null,"code":"var _jsxFileName = \"/Users/ajiteshjamulkar/Desktop/Chainlink-Hackathon/Website/app/src/App.js\";\nimport \"./App.css\";\nimport contractABI from \"./abi.json\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet Web3 = require(\"web3\");\nfunction App() {\n  const contractAddress = \" 0x7Ca90f48cbDCC2Bf2553E1A27c3f68A06A1c0C2C\";\n  let web3 = new Web3(window.ethereum);\n  let contract = new web3.eth.Contract(contractABI, contractAddress);\n  async function connectWallet() {\n    if (window.ethereum) {\n      const accounts = await window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      }).catch(err => {\n        if (err.code === 4001) {\n          console.log(\"Please connect to MetaMask.\");\n        } else {\n          console.error(err);\n        }\n      });\n      setConnected(accounts[0]);\n      if (accounts[0]) {\n        console.log(\"We have an account\");\n      }\n    } else {\n      console.error(\"No web3 provider detected\");\n      document.getElementById(\"connectMessage\").innerText = \"No web3 provider detected. Please install MetaMask.\";\n    }\n  }\n  function shortAddress(address, startLength = 6, endLength = 4) {\n    return `${address.slice(0, startLength)}...${address.slice(-endLength)}`;\n  }\n  function setConnected(address) {\n    document.getElementById(\"userAddress\").innerText = \"Connected: \" + shortAddress(address);\n    document.getElementById(\"connectMessage\").style.display = \"none\";\n    document.getElementById(\"tweetForm\").style.display = \"block\";\n    console.log(address);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWallet,\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["contractABI","jsxDEV","_jsxDEV","Fragment","_Fragment","Web3","require","App","contractAddress","web3","window","ethereum","contract","eth","Contract","connectWallet","accounts","request","method","catch","err","code","console","log","error","setConnected","document","getElementById","innerText","shortAddress","address","startLength","endLength","slice","style","display","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ajiteshjamulkar/Desktop/Chainlink-Hackathon/Website/app/src/App.js"],"sourcesContent":["import \"./App.css\";\n\nimport contractABI from \"./abi.json\";\nlet Web3 = require(\"web3\");\nfunction App() {\n  const contractAddress = \" 0x7Ca90f48cbDCC2Bf2553E1A27c3f68A06A1c0C2C\";\n  let web3 = new Web3(window.ethereum);\n  let contract = new web3.eth.Contract(contractABI, contractAddress);\n  async function connectWallet() {\n    if (window.ethereum) {\n      const accounts = await window.ethereum\n        .request({ method: \"eth_requestAccounts\" })\n        .catch((err) => {\n          if (err.code === 4001) {\n            console.log(\"Please connect to MetaMask.\");\n          } else {\n            console.error(err);\n          }\n        });\n      setConnected(accounts[0]);\n      if (accounts[0]) {\n        console.log(\"We have an account\");\n      }\n    } else {\n      console.error(\"No web3 provider detected\");\n      document.getElementById(\"connectMessage\").innerText =\n        \"No web3 provider detected. Please install MetaMask.\";\n    }\n  }\n  function shortAddress(address, startLength = 6, endLength = 4) {\n    return `${address.slice(0, startLength)}...${address.slice(-endLength)}`;\n  }\n  function setConnected(address) {\n    document.getElementById(\"userAddress\").innerText =\n      \"Connected: \" + shortAddress(address);\n    document.getElementById(\"connectMessage\").style.display = \"none\";\n    document.getElementById(\"tweetForm\").style.display = \"block\";\n    console.log(address);\n  }\n  return (\n    <>\n      <button onClick={connectWallet}>Connect Wallet</button>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAO,WAAW;AAElB,OAAOA,WAAW,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACrC,IAAIC,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC1B,SAASC,GAAGA,CAAA,EAAG;EACb,MAAMC,eAAe,GAAG,6CAA6C;EACrE,IAAIC,IAAI,GAAG,IAAIJ,IAAI,CAACK,MAAM,CAACC,QAAQ,CAAC;EACpC,IAAIC,QAAQ,GAAG,IAAIH,IAAI,CAACI,GAAG,CAACC,QAAQ,CAACd,WAAW,EAAEQ,eAAe,CAAC;EAClE,eAAeO,aAAaA,CAAA,EAAG;IAC7B,IAAIL,MAAM,CAACC,QAAQ,EAAE;MACnB,MAAMK,QAAQ,GAAG,MAAMN,MAAM,CAACC,QAAQ,CACnCM,OAAO,CAAC;QAAEC,MAAM,EAAE;MAAsB,CAAC,CAAC,CAC1CC,KAAK,CAAEC,GAAG,IAAK;QACd,IAAIA,GAAG,CAACC,IAAI,KAAK,IAAI,EAAE;UACrBC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;QAC5C,CAAC,MAAM;UACLD,OAAO,CAACE,KAAK,CAACJ,GAAG,CAAC;QACpB;MACF,CAAC,CAAC;MACJK,YAAY,CAACT,QAAQ,CAAC,CAAC,CAAC,CAAC;MACzB,IAAIA,QAAQ,CAAC,CAAC,CAAC,EAAE;QACfM,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;MACnC;IACF,CAAC,MAAM;MACLD,OAAO,CAACE,KAAK,CAAC,2BAA2B,CAAC;MAC1CE,QAAQ,CAACC,cAAc,CAAC,gBAAgB,CAAC,CAACC,SAAS,GACjD,qDAAqD;IACzD;EACF;EACA,SAASC,YAAYA,CAACC,OAAO,EAAEC,WAAW,GAAG,CAAC,EAAEC,SAAS,GAAG,CAAC,EAAE;IAC7D,OAAQ,GAAEF,OAAO,CAACG,KAAK,CAAC,CAAC,EAAEF,WAAW,CAAE,MAAKD,OAAO,CAACG,KAAK,CAAC,CAACD,SAAS,CAAE,EAAC;EAC1E;EACA,SAASP,YAAYA,CAACK,OAAO,EAAE;IAC7BJ,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC,CAACC,SAAS,GAC9C,aAAa,GAAGC,YAAY,CAACC,OAAO,CAAC;IACvCJ,QAAQ,CAACC,cAAc,CAAC,gBAAgB,CAAC,CAACO,KAAK,CAACC,OAAO,GAAG,MAAM;IAChET,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,CAACO,KAAK,CAACC,OAAO,GAAG,OAAO;IAC5Db,OAAO,CAACC,GAAG,CAACO,OAAO,CAAC;EACtB;EACA,oBACE5B,OAAA,CAAAE,SAAA;IAAAgC,QAAA,eACElC,OAAA;MAAQmC,OAAO,EAAEtB,aAAc;MAAAqB,QAAA,EAAC;IAAc;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC,gBACvD,CAAC;AAEP;AAACC,EAAA,GAxCQnC,GAAG;AA0CZ,eAAeA,GAAG;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}