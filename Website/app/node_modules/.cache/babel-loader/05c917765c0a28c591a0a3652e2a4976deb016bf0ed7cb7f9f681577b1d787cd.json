{"ast":null,"code":"var _jsxFileName = \"/Users/ajiteshjamulkar/Desktop/Chainlink-Hackathon/Website/app/src/components/BuySkinPage.jsx\",\n  _s = $RefreshSig$();\n// import React ,{useState, useEffect }from 'react';\n// import contractABI from \"../abi1.json\";\n// import Web3 from \"web3\";\n// import axios from 'axios'; // Make sure to import axios for making HTTP requests\n// import skinImg from \"./assets/Woman-skirt.png\";\n// import { useParams } from 'react-router-dom';\n\n// import Button from 'react-bootstrap/Button';\n// import Card from 'react-bootstrap/Card';\n\n// function CardComponent({ username, price, buy }) {\n//   return (\n//     <Card style={{ width: '18rem' }}>\n//       <Card.Img variant=\"top\" src=\"holder.js/100px180\" />\n//       <Card.Body>\n//         <Card.Title>{username}</Card.Title>\n//         <Card.Text>Price: {price}</Card.Text>\n//         <Button variant=\"primary\" onClick={buy}>BUY</Button>\n//       </Card.Body>\n//     </Card>\n//   );\n// }\n\n// //Ek skin buy karney wala dashbord\n\n// //let web3 = new Web3(window.ethereum); //Sepolia\n\n// let web3 = new Web3(new Web3.providers.HttpProvider(\"HTTP://127.0.0.1:7545\")); //Ganache\n// //window.ethereum\n\n// async function BuySkinPage(props) {\n\n//     //console.log(\"wallet Address - \",props.WalletAddress);\n//     const contractAddress =\n//     \"0x5070ee85A360899882E907c213cb7147c14466D4\";// ganache address\n//    // \"0xb346d01c452a91f19895F5f26Ef845C1DE87b398\"; //Sepolia address\n//   let [connectedAccount, setConnectedAccount] = useState(props.WalletAddress);\n//   let [gameCompany, setGameCompany] = useState(\"\");\n//   let seller;\n//   const [skins, setSkins] = useState([]);\n//   const { userName, skinId } = useParams();\n\n//   console.log(\"Buy Skin with skinId - \",skinId);\n//   connectWallet();\n//   try{\n//     const url=`http://localhost:5001/${skinId}`;\n//     const res= await axios.get(url);\n//     console.log(\"get data-\",res.data);\n//     const data = res.data;\n//     if (Array.isArray(data)) {\n//       setSkins(data);\n//     } else {\n//       console.log('Expected an array but got:', typeof data);\n//     }\n\n//   }catch(e){\n//     console.log(\"Error \");\n//   }\n\n//   async function connectWallet() {\n//     web3.eth.getAccounts().then((accounts) => {\n//       setConnectedAccount(accounts[0]);\n//       connectedAccount=accounts[0];\n\n//       setGameCompany(accounts[8]);\n//       gameCompany=accounts[8];\n\n//       console.log(\"Connected account:\", accounts[0]);\n//       console.log(\"gameCompany -- \", gameCompany);\n//     });\n\n//   }\n\n//   function shortAddress(address, startLength = 6, endLength = 4) {\n//     return `${address.slice(0, startLength)}...${address.slice(-endLength)}`;\n//   }\n//   async function BuyConfirmed(skinId){\n\n//       console.log(\"Buy Confirmed\");\n\n//       try {\n//         // Delete the skin from the skinSeller collection\n//         await axios.delete(`http://localhost:5001/Suvojit/Buy/${skinId}`);\n\n//         // Update the OwnedSkin collection with the purchased skin skinId\n//         await axios.put(`http://localhost:5001/Ajitesh/Skin`, {\n//           skinIds: [skinId] // Wrap skinId in an array if it's not already an array\n//         });\n\n//         console.log(\"Skin deleted and OwnedSkin updated successfully.\");\n//       } catch (error) {\n//         console.error(\"Error:\", error.message);\n//       }\n\n//   }\n\n//   async function BuySkin(event) { \n\n//     event.preventDefault(); // Prevent form submission\n//     // try {\n//     //   // Get the skin skinId from the form input\n\n//     //   const url = `http://localhost:5001/Suvojit/Buy/${skinId}`;\n//     //   const response = await axios.get(url);\n//     //   console.log(response.data);\n//     //   const contract = new web3.eth.Contract(contractABI, contractAddress);\n//     //   const amountInWei = web3.utils.toWei(response.data.price.toString(), \"ether\");// Amount to send in wei\n//     //   const gasPrice = await web3.eth.getGasPrice(); // Get current gas price\n//     //   console.log(\"Connected Account: \", connectedAccount);\n//     //   console.log(\"Amount in Wei: \", amountInWei);\n//     //   console.log(\"Seller - \", response.data.WalletAddress);\n//     //   console.log(\"Game Company - \", gameCompany);\n//     //   console.log(\"Contract Start- \");\n//     //   try {\n//     //     const gasLimit = await contract.methods\n//     //       .Buy(response.data.WalletAddress, gameCompany)\n//     //       .estimateGas({\n//     //         from: connectedAccount,\n//     //         value: amountInWei,\n//     //       });\n\n//     //     await contract.methods\n//     //       .Buy(response.data.WalletAddress, gameCompany)\n//     //       .send({\n//     //         from: connectedAccount,\n//     //         value: amountInWei,\n//     //         gas: gasLimit,\n//     //         gasPrice: gasPrice,\n//     //       })\n//     //       .on(\"receipt\", (receipt) => {\n//     //         console.log(\"Transaction receipt:\", receipt);\n//     //         console.log(\"Transaction hash:\", receipt.transactionHash);\n//     //       })\n//     //       .on(\"error\", (error) => {\n//     //         console.error(\"Transaction error:\", error);\n//     //       });\n//     //   } catch (e) {\n//     //     console.error(\"blockchain error- \", e);\n//     //   }\n//     // } catch (error) {\n//     //   console.error(\"Buy Error\", error.message);\n//     // } \n//    // BuyConfirmed(skinId);\n//   }\n\n//   // useEffect(() => {\n//   //   BuySkin(); // Fetch skins when the component mounts\n//   // }, []);\n\n//   return (<>\n\n//       <div className=\"App\">\n//         <button onClick={connectWallet}>Connect Wallet</button>\n//         {connectedAccount && (\n//           <div>\n//             <p>Connected: {shortAddress(connectedAccount)}</p>\n//             {/* Add more UI elements or actions here */}\n//           </div>\n//         )}\n//         </div>\n\n//         <img src={skinImg} alt=\"Skin\" />\n\n//       <br></br>\n//       <button onClick={(event) => BuySkin(event)}>Buy Skin</button>\n//       <button onClick={BuyConfirmed}>Buy Confirmed</button>\n//       <br></br>\n\n//       <div>\n//       {skins.map((skin, index) => (\n//         <CardComponent \n//           key={index} \n//           username={skin.userName} \n//           price={skin.price} \n//           buy={() => console.log(`Buying skin ${skin.skinId}`)} \n//         />\n//       ))}\n//     </div>\n\n//   </>\n//   );\n// }\n\n// export default BuySkinPage;\n\nimport React, { useState, useEffect } from 'react';\nimport Web3 from 'web3';\nimport axios from 'axios';\nimport skinImg from \"./assets/Woman-skirt.png\";\nimport { useParams } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport contractABI from \"../abi1.json\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CardComponent({\n  username,\n  price,\n  buy\n}) {\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      width: '18rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n      variant: \"top\",\n      src: skinImg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        children: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        children: [\"Price: \", price, \" ETH\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: buy,\n        children: \"BUY\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 5\n  }, this);\n}\n_c = CardComponent;\nasync function BuySkinPage(props) {\n  _s();\n  const [connectedAccount, setConnectedAccount] = useState(null);\n  let [gameCompany, setGameCompany] = useState(\"\");\n  const [skins, setSkins] = useState([]);\n  const {\n    skinId\n  } = useParams();\n  const contractAddress = \"0x5070ee85A360899882E907c213cb7147c14466D4\"; // ganache address\n  // \"0xb346d01c452a91f19895F5f26Ef845C1DE87b398\"; //Sepolia address\n\n  let web3 = new Web3(new Web3.providers.HttpProvider(\"http://127.0.0.1:7545\")); // Ganache\n\n  useEffect(() => {\n    async function fetchSkins() {\n      try {\n        const url = `http://localhost:5001/${skinId}`;\n        const res = await axios.get(url);\n        const data = res.data;\n        if (Array.isArray(data)) {\n          setSkins(data);\n        } else {\n          console.log('Expected an array but got:', typeof data);\n        }\n      } catch (e) {\n        console.log(\"Error fetching skins: \", e);\n      }\n    }\n    fetchSkins();\n  }, [skinId]);\n  async function connectWallet() {\n    const accounts = await web3.eth.getAccounts();\n    setConnectedAccount(accounts[0]);\n    console.log(\"Connected account:\", accounts[0]);\n    setGameCompany(accounts[8]);\n    gameCompany = accounts[8];\n  }\n  async function BuySkin(skin) {\n    try {\n      await connectWallet();\n      const url = `http://localhost:5001/${skin.skinId}`;\n      const response = await axios.get(url);\n      const contract = new web3.eth.Contract(contractABI, contractAddress);\n      const amountInWei = web3.utils.toWei(skin.price.toString(), \"ether\");\n      const gasPrice = await web3.eth.getGasPrice();\n      const gasLimit = await contract.methods.Buy(response.data.WalletAddress, gameCompany).estimateGas({\n        from: connectedAccount,\n        value: amountInWei\n      });\n      await contract.methods.Buy(response.data.WalletAddress, gameCompany).send({\n        from: connectedAccount,\n        value: amountInWei,\n        gas: gasLimit,\n        gasPrice: gasPrice\n      }).on(\"receipt\", receipt => {\n        console.log(\"Transaction receipt:\", receipt);\n        console.log(\"Transaction hash:\", receipt.transactionHash);\n      }).on(\"error\", error => {\n        console.error(\"Transaction error:\", error);\n      });\n\n      // Update the server\n      await axios.delete(`http://localhost:5001/Ajitesh/Buy/${skin.skinId}`);\n      await axios.put(`http://localhost:5001/Ajitesh/Skin`, {\n        skinIds: [skin.skinId]\n      });\n      console.log(\"Skin bought and database updated successfully.\");\n    } catch (error) {\n      console.error(\"Error in buying skin:\", error);\n    }\n  }\n  function shortAddress(address, startLength = 6, endLength = 4) {\n    return `${address.slice(0, startLength)}...${address.slice(-endLength)}`;\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: connectWallet,\n        children: \"Connect Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this), connectedAccount && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Connected: \", shortAddress(connectedAccount)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: skins.map((skin, index) => /*#__PURE__*/_jsxDEV(CardComponent, {\n        username: skin.userName,\n        price: skin.price,\n        buy: () => BuySkin(skin)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(BuySkinPage, \"3+XEE9PL1pInTHezTu2Ebihgrk0=\", false, function () {\n  return [useParams];\n});\n_c2 = BuySkinPage;\nexport default BuySkinPage;\nvar _c, _c2;\n$RefreshReg$(_c, \"CardComponent\");\n$RefreshReg$(_c2, \"BuySkinPage\");","map":{"version":3,"names":["React","useState","useEffect","Web3","axios","skinImg","useParams","Button","Card","contractABI","jsxDEV","_jsxDEV","Fragment","_Fragment","CardComponent","username","price","buy","style","width","children","Img","variant","src","fileName","_jsxFileName","lineNumber","columnNumber","Body","Title","Text","onClick","_c","BuySkinPage","props","_s","connectedAccount","setConnectedAccount","gameCompany","setGameCompany","skins","setSkins","skinId","contractAddress","web3","providers","HttpProvider","fetchSkins","url","res","get","data","Array","isArray","console","log","e","connectWallet","accounts","eth","getAccounts","BuySkin","skin","response","contract","Contract","amountInWei","utils","toWei","toString","gasPrice","getGasPrice","gasLimit","methods","Buy","WalletAddress","estimateGas","from","value","send","gas","on","receipt","transactionHash","error","delete","put","skinIds","shortAddress","address","startLength","endLength","slice","className","map","index","userName","_c2","$RefreshReg$"],"sources":["/Users/ajiteshjamulkar/Desktop/Chainlink-Hackathon/Website/app/src/components/BuySkinPage.jsx"],"sourcesContent":["\n  // import React ,{useState, useEffect }from 'react';\n// import contractABI from \"../abi1.json\";\n// import Web3 from \"web3\";\n// import axios from 'axios'; // Make sure to import axios for making HTTP requests\n// import skinImg from \"./assets/Woman-skirt.png\";\n// import { useParams } from 'react-router-dom';\n\n// import Button from 'react-bootstrap/Button';\n// import Card from 'react-bootstrap/Card';\n\n// function CardComponent({ username, price, buy }) {\n//   return (\n//     <Card style={{ width: '18rem' }}>\n//       <Card.Img variant=\"top\" src=\"holder.js/100px180\" />\n//       <Card.Body>\n//         <Card.Title>{username}</Card.Title>\n//         <Card.Text>Price: {price}</Card.Text>\n//         <Button variant=\"primary\" onClick={buy}>BUY</Button>\n//       </Card.Body>\n//     </Card>\n//   );\n// }\n\n\n// //Ek skin buy karney wala dashbord\n\n\n// //let web3 = new Web3(window.ethereum); //Sepolia\n\n// let web3 = new Web3(new Web3.providers.HttpProvider(\"HTTP://127.0.0.1:7545\")); //Ganache\n// //window.ethereum\n\n// async function BuySkinPage(props) {\n\n//     //console.log(\"wallet Address - \",props.WalletAddress);\n//     const contractAddress =\n//     \"0x5070ee85A360899882E907c213cb7147c14466D4\";// ganache address\n//    // \"0xb346d01c452a91f19895F5f26Ef845C1DE87b398\"; //Sepolia address\n//   let [connectedAccount, setConnectedAccount] = useState(props.WalletAddress);\n//   let [gameCompany, setGameCompany] = useState(\"\");\n//   let seller;\n//   const [skins, setSkins] = useState([]);\n//   const { userName, skinId } = useParams();\n\n//   console.log(\"Buy Skin with skinId - \",skinId);\n//   connectWallet();\n//   try{\n//     const url=`http://localhost:5001/${skinId}`;\n//     const res= await axios.get(url);\n//     console.log(\"get data-\",res.data);\n//     const data = res.data;\n//     if (Array.isArray(data)) {\n//       setSkins(data);\n//     } else {\n//       console.log('Expected an array but got:', typeof data);\n//     }\n\n\n//   }catch(e){\n//     console.log(\"Error \");\n//   }\n\n\n\n//   async function connectWallet() {\n//     web3.eth.getAccounts().then((accounts) => {\n//       setConnectedAccount(accounts[0]);\n//       connectedAccount=accounts[0];\n\n//       setGameCompany(accounts[8]);\n//       gameCompany=accounts[8];\n\n//       console.log(\"Connected account:\", accounts[0]);\n//       console.log(\"gameCompany -- \", gameCompany);\n//     });\n\n//   }\n\n//   function shortAddress(address, startLength = 6, endLength = 4) {\n//     return `${address.slice(0, startLength)}...${address.slice(-endLength)}`;\n//   }\n//   async function BuyConfirmed(skinId){\n\n    \n//       console.log(\"Buy Confirmed\");\n    \n//       try {\n//         // Delete the skin from the skinSeller collection\n//         await axios.delete(`http://localhost:5001/Suvojit/Buy/${skinId}`);\n    \n//         // Update the OwnedSkin collection with the purchased skin skinId\n//         await axios.put(`http://localhost:5001/Ajitesh/Skin`, {\n//           skinIds: [skinId] // Wrap skinId in an array if it's not already an array\n//         });\n    \n//         console.log(\"Skin deleted and OwnedSkin updated successfully.\");\n//       } catch (error) {\n//         console.error(\"Error:\", error.message);\n//       }\n\n//   }\n \n//   async function BuySkin(event) { \n\n//     event.preventDefault(); // Prevent form submission\n//     // try {\n//     //   // Get the skin skinId from the form input\n      \n//     //   const url = `http://localhost:5001/Suvojit/Buy/${skinId}`;\n//     //   const response = await axios.get(url);\n//     //   console.log(response.data);\n//     //   const contract = new web3.eth.Contract(contractABI, contractAddress);\n//     //   const amountInWei = web3.utils.toWei(response.data.price.toString(), \"ether\");// Amount to send in wei\n//     //   const gasPrice = await web3.eth.getGasPrice(); // Get current gas price\n//     //   console.log(\"Connected Account: \", connectedAccount);\n//     //   console.log(\"Amount in Wei: \", amountInWei);\n//     //   console.log(\"Seller - \", response.data.WalletAddress);\n//     //   console.log(\"Game Company - \", gameCompany);\n//     //   console.log(\"Contract Start- \");\n//     //   try {\n//     //     const gasLimit = await contract.methods\n//     //       .Buy(response.data.WalletAddress, gameCompany)\n//     //       .estimateGas({\n//     //         from: connectedAccount,\n//     //         value: amountInWei,\n//     //       });\n\n//     //     await contract.methods\n//     //       .Buy(response.data.WalletAddress, gameCompany)\n//     //       .send({\n//     //         from: connectedAccount,\n//     //         value: amountInWei,\n//     //         gas: gasLimit,\n//     //         gasPrice: gasPrice,\n//     //       })\n//     //       .on(\"receipt\", (receipt) => {\n//     //         console.log(\"Transaction receipt:\", receipt);\n//     //         console.log(\"Transaction hash:\", receipt.transactionHash);\n//     //       })\n//     //       .on(\"error\", (error) => {\n//     //         console.error(\"Transaction error:\", error);\n//     //       });\n//     //   } catch (e) {\n//     //     console.error(\"blockchain error- \", e);\n//     //   }\n//     // } catch (error) {\n//     //   console.error(\"Buy Error\", error.message);\n//     // } \n//    // BuyConfirmed(skinId);\n//   }\n\n  \n//   // useEffect(() => {\n//   //   BuySkin(); // Fetch skins when the component mounts\n//   // }, []);\n \n//   return (<>\n  \n//       <div className=\"App\">\n//         <button onClick={connectWallet}>Connect Wallet</button>\n//         {connectedAccount && (\n//           <div>\n//             <p>Connected: {shortAddress(connectedAccount)}</p>\n//             {/* Add more UI elements or actions here */}\n//           </div>\n//         )}\n//         </div>\n\n//         <img src={skinImg} alt=\"Skin\" />\n\n        \n    \n\n//       <br></br>\n//       <button onClick={(event) => BuySkin(event)}>Buy Skin</button>\n//       <button onClick={BuyConfirmed}>Buy Confirmed</button>\n//       <br></br>\n\n\n//       <div>\n//       {skins.map((skin, index) => (\n//         <CardComponent \n//           key={index} \n//           username={skin.userName} \n//           price={skin.price} \n//           buy={() => console.log(`Buying skin ${skin.skinId}`)} \n//         />\n//       ))}\n//     </div>\n\n//   </>\n//   );\n// }\n\n// export default BuySkinPage;\n\n\n\nimport React, { useState, useEffect } from 'react';\nimport Web3 from 'web3';\nimport axios from 'axios';\nimport skinImg from \"./assets/Woman-skirt.png\"\nimport { useParams } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport contractABI from \"../abi1.json\";\n\nfunction CardComponent({ username, price, buy }) {\n  return (\n    <Card style={{ width: '18rem' }}>\n      <Card.Img variant=\"top\" src={skinImg} />\n      <Card.Body>\n        <Card.Title>{username}</Card.Title>\n        <Card.Text>Price: {price} ETH</Card.Text>\n        <Button variant=\"primary\" onClick={buy}>BUY</Button>\n      </Card.Body>\n    </Card>\n  );\n}\n\nasync function BuySkinPage(props) {\n  const [connectedAccount, setConnectedAccount] = useState(null);\n  let   [gameCompany, setGameCompany] = useState(\"\");\n  const [skins, setSkins] = useState([]);\n  const { skinId } = useParams();\n      const contractAddress =\n    \"0x5070ee85A360899882E907c213cb7147c14466D4\";// ganache address\n   // \"0xb346d01c452a91f19895F5f26Ef845C1DE87b398\"; //Sepolia address\n\n  let web3 = new Web3(new Web3.providers.HttpProvider(\"http://127.0.0.1:7545\")); // Ganache\n\n  useEffect(() => {\n    async function fetchSkins() {\n      try {\n        const url = `http://localhost:5001/${skinId}`;\n        const res = await axios.get(url);\n        const data = res.data;\n        if (Array.isArray(data)) {\n          setSkins(data);\n        } else {\n          console.log('Expected an array but got:', typeof data);\n        }\n      } catch (e) {\n        console.log(\"Error fetching skins: \", e);\n      }\n    }\n\n    fetchSkins();\n  }, [skinId]);\n\n  async function connectWallet() {\n    const accounts = await web3.eth.getAccounts();\n    setConnectedAccount(accounts[0]);\n    console.log(\"Connected account:\", accounts[0]);\n      setGameCompany(accounts[8]);\n      gameCompany=accounts[8];\n  }\n\n  async function BuySkin(skin) {\n    try {\n      await connectWallet();\n      const url = `http://localhost:5001/${skin.skinId}`;\n      const response = await axios.get(url);\n      const contract = new web3.eth.Contract(contractABI, contractAddress);\n      const amountInWei = web3.utils.toWei(skin.price.toString(), \"ether\");\n      const gasPrice = await web3.eth.getGasPrice();\n      const gasLimit = await contract.methods\n        .Buy(response.data.WalletAddress, gameCompany)\n        .estimateGas({\n          from: connectedAccount,\n          value: amountInWei,\n        });\n\n      await contract.methods\n        .Buy(response.data.WalletAddress, gameCompany)\n        .send({\n          from: connectedAccount,\n          value: amountInWei,\n          gas: gasLimit,\n          gasPrice: gasPrice,\n        })\n        .on(\"receipt\", (receipt) => {\n          console.log(\"Transaction receipt:\", receipt);\n          console.log(\"Transaction hash:\", receipt.transactionHash);\n        })\n        .on(\"error\", (error) => {\n          console.error(\"Transaction error:\", error);\n        });\n\n      // Update the server\n      await axios.delete(`http://localhost:5001/Ajitesh/Buy/${skin.skinId}`);\n      await axios.put(`http://localhost:5001/Ajitesh/Skin`, {\n        skinIds: [skin.skinId]\n      });\n\n      console.log(\"Skin bought and database updated successfully.\");\n    } catch (error) {\n      console.error(\"Error in buying skin:\", error);\n    }\n  }\n\n  function shortAddress(address, startLength = 6, endLength = 4) {\n    return `${address.slice(0, startLength)}...${address.slice(-endLength)}`;\n  }\n\n  return (\n    <>\n      <div className=\"App\">\n        <button onClick={connectWallet}>Connect Wallet</button>\n        {connectedAccount && (\n          <div>\n            <p>Connected: {shortAddress(connectedAccount)}</p>\n          </div>\n        )}\n      </div>\n\n      <div>\n        {skins.map((skin, index) => (\n          <CardComponent \n            key={index} \n            username={skin.userName} \n            price={skin.price} \n            buy={() => BuySkin(skin)} \n          />\n        ))}\n      </div>\n    </>\n  );\n}\n\nexport default BuySkinPage;\n"],"mappings":";;AACE;AACF;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAGA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAIA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAIA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,0BAA0B;AAC9C,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAOC,WAAW,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEvC,SAASC,aAAaA,CAAC;EAAEC,QAAQ;EAAEC,KAAK;EAAEC;AAAI,CAAC,EAAE;EAC/C,oBACEN,OAAA,CAACH,IAAI;IAACU,KAAK,E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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}