{"ast":null,"code":"var _jsxFileName = \"/Users/ajiteshjamulkar/Desktop/Chainlink-Hackathon/Website/app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport contractABI from \"./abi.json\";\nimport Web3 from \"web3\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet web3 = new Web3(window.ethereum);\n\n//new Web3.providers.HttpProvider(\"HTTP://127.0.0.1:7545\"));\n//window.ethereum\n\nfunction App() {\n  _s();\n  const contractAddress = \"0xb346d01c452a91f19895F5f26Ef845C1DE87b398\"; //Sepolia address\n  // \"0xBc0139fA3BE2821633B05c7e4415fCb38715D250\";// ganache address\n  const [connectedAccount, setConnectedAccount] = useState(\"\");\n  const [seller, setSeller] = useState(\"\");\n  const [gameCompany, setGameCompany] = useState(\"\");\n  async function connectWallet() {\n    web3.eth.getAccounts().then(accounts => {\n      setConnectedAccount(accounts[0]);\n      console.log(\"Connected account:\", accounts[0]);\n      setSeller(accounts[3]);\n      setGameCompany(accounts[1]);\n    });\n    if (window.ethereum) {\n      try {\n        // Request access to MetaMask accounts\n        const accounts = await window.ethereum.request({\n          method: \"eth_requestAccounts\"\n        });\n        if (accounts.length > 0) {\n          setConnectedAccount(accounts[0]);\n          console.log(\"Connected account:\", accounts[0]);\n          setSeller(accounts[3]);\n          setGameCompany(accounts[1]);\n          console.log(\"seller \", seller);\n          console.log(\"gameCompany \", gameCompany);\n          // Initialize Web3 and contract here if needed\n        }\n      } catch (error) {\n        if (error.code === 4001) {\n          console.log(\"User rejected account access\");\n        } else {\n          console.error(\"Error:\", error);\n        }\n      }\n    } else {\n      console.error(\"MetaMask not found\");\n    }\n  }\n  function shortAddress(address, startLength = 6, endLength = 4) {\n    return `${address.slice(0, startLength)}...${address.slice(-endLength)}`;\n  }\n  async function Buy() {\n    const contract = await new web3.eth.Contract(contractABI, contractAddress);\n    const amountInWei = web3.utils.toWei(\"100000\", \"wei\"); //web3.utils.toWei(\"10\", \"ether\"); // Amount to send in wei // Amount to send in wei\n    console.log(\"theek3\");\n    const gasPrice = await web3.eth.getGasPrice(); // Get current gas price\n    console.log(\"theek4\");\n    console.log(\"Account : \", connectedAccount);\n    await contract.methods.Buy(seller, gameCompany).send({\n      from: connectedAccount,\n      value: amountInWei,\n      gasPrice: gasPrice\n    }).on(\"receipt\", receipt => {\n      console.log(\"Transaction receipt:\", receipt);\n      console.log(\"Transaction hash:\", receipt.transactionHash);\n    }).on(\"error\", error => {\n      console.error(\"Transaction error:\", error);\n    });\n  }\n  async function getContractAddresses() {\n    const contract = new web3.eth.Contract(contractABI, contractAddress);\n    try {\n      const owner = await contract.methods.owner().call();\n      const seller = await contract.methods.seller().call();\n      const gameCompany = await contract.methods.gameCompany().call();\n      console.log(\"Owner:\", owner);\n      console.log(\"Seller:\", seller);\n      console.log(\"Game Company:\", gameCompany);\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: connectWallet,\n        children: \"Connect Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), connectedAccount && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Connected: \", shortAddress(connectedAccount)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getContractAddresses,\n      children: \"Get Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: Buy,\n      children: \"Buy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"NLcPtz25aLsaqkTSTaTy6uol5tM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","contractABI","Web3","jsxDEV","_jsxDEV","Fragment","_Fragment","web3","window","ethereum","App","_s","contractAddress","connectedAccount","setConnectedAccount","seller","setSeller","gameCompany","setGameCompany","connectWallet","eth","getAccounts","then","accounts","console","log","request","method","length","error","code","shortAddress","address","startLength","endLength","slice","Buy","contract","Contract","amountInWei","utils","toWei","gasPrice","getGasPrice","methods","send","from","value","on","receipt","transactionHash","getContractAddresses","owner","call","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ajiteshjamulkar/Desktop/Chainlink-Hackathon/Website/app/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport contractABI from \"./abi.json\";\n\nimport Web3 from \"web3\";\nlet web3 = new Web3(window.ethereum);\n\n//new Web3.providers.HttpProvider(\"HTTP://127.0.0.1:7545\"));\n//window.ethereum\n\nfunction App() {\n  const contractAddress = \"0xb346d01c452a91f19895F5f26Ef845C1DE87b398\"; //Sepolia address\n  // \"0xBc0139fA3BE2821633B05c7e4415fCb38715D250\";// ganache address\n  const [connectedAccount, setConnectedAccount] = useState(\"\");\n  const [seller, setSeller] = useState(\"\");\n  const [gameCompany, setGameCompany] = useState(\"\");\n\n  async function connectWallet() {\n    web3.eth.getAccounts().then((accounts) => {\n      setConnectedAccount(accounts[0]);\n      console.log(\"Connected account:\", accounts[0]);\n      setSeller(accounts[3]);\n      setGameCompany(accounts[1]);\n    });\n\n    if (window.ethereum) {\n      try {\n        // Request access to MetaMask accounts\n        const accounts = await window.ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        if (accounts.length > 0) {\n          setConnectedAccount(accounts[0]);\n          console.log(\"Connected account:\", accounts[0]);\n          setSeller(accounts[3]);\n          setGameCompany(accounts[1]);\n          console.log(\"seller \", seller);\n          console.log(\"gameCompany \", gameCompany);\n          // Initialize Web3 and contract here if needed\n        }\n      } catch (error) {\n        if (error.code === 4001) {\n          console.log(\"User rejected account access\");\n        } else {\n          console.error(\"Error:\", error);\n        }\n      }\n    } else {\n      console.error(\"MetaMask not found\");\n    }\n  }\n\n  function shortAddress(address, startLength = 6, endLength = 4) {\n    return `${address.slice(0, startLength)}...${address.slice(-endLength)}`;\n  }\n  async function Buy() {\n    const contract = await new web3.eth.Contract(contractABI, contractAddress);\n    const amountInWei = web3.utils.toWei(\"100000\", \"wei\"); //web3.utils.toWei(\"10\", \"ether\"); // Amount to send in wei // Amount to send in wei\n    console.log(\"theek3\");\n    const gasPrice = await web3.eth.getGasPrice(); // Get current gas price\n    console.log(\"theek4\");\n    console.log(\"Account : \", connectedAccount);\n    await contract.methods\n      .Buy(seller, gameCompany)\n      .send({\n        from: connectedAccount,\n        value: amountInWei,\n        gasPrice: gasPrice,\n      })\n      .on(\"receipt\", (receipt) => {\n        console.log(\"Transaction receipt:\", receipt);\n        console.log(\"Transaction hash:\", receipt.transactionHash);\n      })\n      .on(\"error\", (error) => {\n        console.error(\"Transaction error:\", error);\n      });\n  }\n\n  async function getContractAddresses() {\n    const contract = new web3.eth.Contract(contractABI, contractAddress);\n\n    try {\n      const owner = await contract.methods.owner().call();\n      const seller = await contract.methods.seller().call();\n      const gameCompany = await contract.methods.gameCompany().call();\n\n      console.log(\"Owner:\", owner);\n      console.log(\"Seller:\", seller);\n      console.log(\"Game Company:\", gameCompany);\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  }\n\n  return (\n    <>\n      <div className=\"App\">\n        <button onClick={connectWallet}>Connect Wallet</button>\n        {connectedAccount && (\n          <div>\n            <p>Connected: {shortAddress(connectedAccount)}</p>\n            {/* Add more UI elements or actions here */}\n          </div>\n        )}\n      </div>\n      <br></br>\n      <button onClick={getContractAddresses}>Get Details</button>\n\n      <br></br>\n      <button onClick={Buy}>Buy</button>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}