{"ast":null,"code":"var _jsxFileName = \"/Users/ajiteshjamulkar/Desktop/Chainlink-Hackathon/Website/app/src/components/BuySkinPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport contractABI from \"../abi1.json\";\nimport Web3 from \"web3\";\nimport axios from 'axios'; // Make sure to import axios for making HTTP requests\nimport skinImg from \"./assets/Woman-skirt.png\";\nimport { useParams } from 'react-router-dom';\n\n//Ek skin buy karney wala dashbord\n\n//let web3 = new Web3(window.ethereum); //Sepolia\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet web3 = new Web3(new Web3.providers.HttpProvider(\"HTTP://127.0.0.1:7545\")); //Ganache\n//window.ethereum\n\nfunction BuyDash(props) {\n  _s();\n  //console.log(\"wallet Address - \",props.WalletAddress);\n  const contractAddress = \"0x5070ee85A360899882E907c213cb7147c14466D4\"; // ganache address\n  // \"0xb346d01c452a91f19895F5f26Ef845C1DE87b398\"; //Sepolia address\n  let [connectedAccount, setConnectedAccount] = useState(props.WalletAddress);\n  let [gameCompany, setGameCompany] = useState(\"\");\n  let seller;\n  const {\n    userName,\n    skinId\n  } = useParams();\n  async function connectWallet() {\n    web3.eth.getAccounts().then(accounts => {\n      setConnectedAccount(accounts[0]);\n      connectedAccount = accounts[0];\n      setGameCompany(accounts[8]);\n      gameCompany = accounts[8];\n      console.log(\"Connected account:\", accounts[0]);\n      console.log(\"gameCompany -- \", gameCompany);\n    });\n    // if (window.ethereum) {\n    //   try {\n    //     // Request access to MetaMask accounts\n    //     const accounts = await window.ethereum.request({\n    //       method: \"eth_requestAccounts\",\n    //     });\n    //     if (accounts.length > 0) {\n    //       setConnectedAccount(accounts[0]);\n    //       console.log(\"Connected account:\", accounts[0]);\n    //       setSeller(accounts[2]);\n    //       setGameCompany(accounts[1]);\n    //       console.log(\"seller -- \", seller);\n    //       console.log(\"gameCompany -- \", gameCompany);\n    //       // Initialize Web3 and contract here if needed\n    //     }\n    //   } catch (error) {\n    //     if (error.code === 4001) {\n    //       console.log(\"User rejected account access\");\n    //     } else {\n    //       console.error(\"Error:\", error);\n    //     }\n    //   }\n    // } else {\n    //   console.error(\"MetaMask not found\");\n    // }\n  }\n  function shortAddress(address, startLength = 6, endLength = 4) {\n    return `${address.slice(0, startLength)}...${address.slice(-endLength)}`;\n  }\n  async function BuyConfirmed(skinId) {\n    console.log(\"Buy Confirmed\");\n    try {\n      // Delete the skin from the skinSeller collection\n      await axios.delete(`http://localhost:5001/Suvojit/Buy/${skinId}`);\n\n      // Update the OwnedSkin collection with the purchased skin skinId\n      await axios.put(`http://localhost:5001/Ajitesh/Skin`, {\n        skinIds: [skinId] // Wrap skinId in an array if it's not already an array\n      });\n      console.log(\"Skin deleted and OwnedSkin updated successfully.\");\n    } catch (error) {\n      console.error(\"Error:\", error.message);\n    }\n  }\n  async function BuySkin(event) {\n    event.preventDefault(); // Prevent form submission\n\n    console.log(\"Buy Skin with skinId - \", skinId);\n    connectWallet();\n    try {\n      const url = `http://localhost:5001/${skinId}`;\n      const res = await axios.get(url);\n      console.log(\"get data-\", res.data);\n      const data = res.data;\n      if (Array.isArray(data)) {\n        console.log('Array length:', data.length);\n        data.forEach(skin => {\n          console.log('UserName:', skin.userName, 'Price:', skin.price);\n        });\n      } else {\n        console.log('Expected an array but got:', typeof data);\n      }\n    } catch (e) {\n      console.log(\"Error \");\n    }\n\n    // try {\n    //   // Get the skin skinId from the form input\n\n    //   const url = `http://localhost:5001/Suvojit/Buy/${skinId}`;\n    //   const response = await axios.get(url);\n    //   console.log(response.data);\n    //   const contract = new web3.eth.Contract(contractABI, contractAddress);\n    //   const amountInWei = web3.utils.toWei(response.data.price.toString(), \"ether\");// Amount to send in wei\n    //   const gasPrice = await web3.eth.getGasPrice(); // Get current gas price\n    //   console.log(\"Connected Account: \", connectedAccount);\n    //   console.log(\"Amount in Wei: \", amountInWei);\n    //   console.log(\"Seller - \", response.data.WalletAddress);\n    //   console.log(\"Game Company - \", gameCompany);\n    //   console.log(\"Contract Start- \");\n    //   try {\n    //     const gasLimit = await contract.methods\n    //       .Buy(response.data.WalletAddress, gameCompany)\n    //       .estimateGas({\n    //         from: connectedAccount,\n    //         value: amountInWei,\n    //       });\n\n    //     await contract.methods\n    //       .Buy(response.data.WalletAddress, gameCompany)\n    //       .send({\n    //         from: connectedAccount,\n    //         value: amountInWei,\n    //         gas: gasLimit,\n    //         gasPrice: gasPrice,\n    //       })\n    //       .on(\"receipt\", (receipt) => {\n    //         console.log(\"Transaction receipt:\", receipt);\n    //         console.log(\"Transaction hash:\", receipt.transactionHash);\n    //       })\n    //       .on(\"error\", (error) => {\n    //         console.error(\"Transaction error:\", error);\n    //       });\n    //   } catch (e) {\n    //     console.error(\"blockchain error- \", e);\n    //   }\n    // } catch (error) {\n    //   console.error(\"Buy Error\", error.message);\n    // } \n    // BuyConfirmed(skinId);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: connectWallet,\n        children: \"Connect Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), connectedAccount && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Connected: \", shortAddress(connectedAccount)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: skinImg,\n      alt: \"Skin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: event => BuySkin(event),\n      children: \"Buy Skin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: BuyConfirmed,\n      children: \"Buy Confirmed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(BuyDash, \"v/h31NLbBv25xkEGpHvkuqoQSH4=\", false, function () {\n  return [useParams];\n});\n_c = BuyDash;\nexport default BuyDash;\nvar _c;\n$RefreshReg$(_c, \"BuyDash\");","map":{"version":3,"names":["React","useState","contractABI","Web3","axios","skinImg","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","web3","providers","HttpProvider","BuyDash","props","_s","contractAddress","connectedAccount","setConnectedAccount","WalletAddress","gameCompany","setGameCompany","seller","userName","skinId","connectWallet","eth","getAccounts","then","accounts","console","log","shortAddress","address","startLength","endLength","slice","BuyConfirmed","delete","put","skinIds","error","message","BuySkin","event","preventDefault","url","res","get","data","Array","isArray","length","forEach","skin","price","e","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["/Users/ajiteshjamulkar/Desktop/Chainlink-Hackathon/Website/app/src/components/BuySkinPage.jsx"],"sourcesContent":["import React ,{useState }from 'react';\nimport contractABI from \"../abi1.json\";\nimport Web3 from \"web3\";\nimport axios from 'axios'; // Make sure to import axios for making HTTP requests\nimport skinImg from \"./assets/Woman-skirt.png\";\nimport { useParams } from 'react-router-dom';\n\n\n//Ek skin buy karney wala dashbord\n\n\n//let web3 = new Web3(window.ethereum); //Sepolia\n\nlet web3 = new Web3(new Web3.providers.HttpProvider(\"HTTP://127.0.0.1:7545\")); //Ganache\n//window.ethereum\n\nfunction BuyDash(props) {\n    //console.log(\"wallet Address - \",props.WalletAddress);\n    const contractAddress =\n    \"0x5070ee85A360899882E907c213cb7147c14466D4\";// ganache address\n   // \"0xb346d01c452a91f19895F5f26Ef845C1DE87b398\"; //Sepolia address\n  let [connectedAccount, setConnectedAccount] = useState(props.WalletAddress);\n  let [gameCompany, setGameCompany] = useState(\"\");\n  let seller;\n  const { userName, skinId } = useParams();\n\n\n\n  async function connectWallet() {\n    web3.eth.getAccounts().then((accounts) => {\n      setConnectedAccount(accounts[0]);\n      connectedAccount=accounts[0];\n\n      setGameCompany(accounts[8]);\n      gameCompany=accounts[8];\n\n      console.log(\"Connected account:\", accounts[0]);\n      console.log(\"gameCompany -- \", gameCompany);\n    });\n    // if (window.ethereum) {\n    //   try {\n    //     // Request access to MetaMask accounts\n    //     const accounts = await window.ethereum.request({\n    //       method: \"eth_requestAccounts\",\n    //     });\n    //     if (accounts.length > 0) {\n    //       setConnectedAccount(accounts[0]);\n    //       console.log(\"Connected account:\", accounts[0]);\n    //       setSeller(accounts[2]);\n    //       setGameCompany(accounts[1]);\n    //       console.log(\"seller -- \", seller);\n    //       console.log(\"gameCompany -- \", gameCompany);\n    //       // Initialize Web3 and contract here if needed\n    //     }\n    //   } catch (error) {\n    //     if (error.code === 4001) {\n    //       console.log(\"User rejected account access\");\n    //     } else {\n    //       console.error(\"Error:\", error);\n    //     }\n    //   }\n    // } else {\n    //   console.error(\"MetaMask not found\");\n    // }\n  }\n\n  function shortAddress(address, startLength = 6, endLength = 4) {\n    return `${address.slice(0, startLength)}...${address.slice(-endLength)}`;\n  }\n  async function BuyConfirmed(skinId){\n\n    \n      console.log(\"Buy Confirmed\");\n    \n      try {\n        // Delete the skin from the skinSeller collection\n        await axios.delete(`http://localhost:5001/Suvojit/Buy/${skinId}`);\n    \n        // Update the OwnedSkin collection with the purchased skin skinId\n        await axios.put(`http://localhost:5001/Ajitesh/Skin`, {\n          skinIds: [skinId] // Wrap skinId in an array if it's not already an array\n        });\n    \n        console.log(\"Skin deleted and OwnedSkin updated successfully.\");\n      } catch (error) {\n        console.error(\"Error:\", error.message);\n      }\n\n  }\n \n  async function BuySkin(event) {\n\n    event.preventDefault(); // Prevent form submission\n    \n\n\n    console.log(\"Buy Skin with skinId - \",skinId);\n    connectWallet();\n    try{\n      const url=`http://localhost:5001/${skinId}`;\n      const res= await axios.get(url);\n      console.log(\"get data-\",res.data);\n      const data = res.data;\n      if (Array.isArray(data)) {\n        console.log('Array length:', data.length);\n        data.forEach(skin => {\n          console.log('UserName:', skin.userName, 'Price:', skin.price);\n        });\n      } else {\n        console.log('Expected an array but got:', typeof data);\n      }\n\n\n    }catch(e){\n      console.log(\"Error \");\n    }\n\n\n\n    // try {\n    //   // Get the skin skinId from the form input\n      \n    //   const url = `http://localhost:5001/Suvojit/Buy/${skinId}`;\n    //   const response = await axios.get(url);\n    //   console.log(response.data);\n    //   const contract = new web3.eth.Contract(contractABI, contractAddress);\n    //   const amountInWei = web3.utils.toWei(response.data.price.toString(), \"ether\");// Amount to send in wei\n    //   const gasPrice = await web3.eth.getGasPrice(); // Get current gas price\n    //   console.log(\"Connected Account: \", connectedAccount);\n    //   console.log(\"Amount in Wei: \", amountInWei);\n    //   console.log(\"Seller - \", response.data.WalletAddress);\n    //   console.log(\"Game Company - \", gameCompany);\n    //   console.log(\"Contract Start- \");\n    //   try {\n    //     const gasLimit = await contract.methods\n    //       .Buy(response.data.WalletAddress, gameCompany)\n    //       .estimateGas({\n    //         from: connectedAccount,\n    //         value: amountInWei,\n    //       });\n\n    //     await contract.methods\n    //       .Buy(response.data.WalletAddress, gameCompany)\n    //       .send({\n    //         from: connectedAccount,\n    //         value: amountInWei,\n    //         gas: gasLimit,\n    //         gasPrice: gasPrice,\n    //       })\n    //       .on(\"receipt\", (receipt) => {\n    //         console.log(\"Transaction receipt:\", receipt);\n    //         console.log(\"Transaction hash:\", receipt.transactionHash);\n    //       })\n    //       .on(\"error\", (error) => {\n    //         console.error(\"Transaction error:\", error);\n    //       });\n    //   } catch (e) {\n    //     console.error(\"blockchain error- \", e);\n    //   }\n    // } catch (error) {\n    //   console.error(\"Buy Error\", error.message);\n    // } \n   // BuyConfirmed(skinId);\n}\n  \n \n  return (<>\n  \n      <div className=\"App\">\n        <button onClick={connectWallet}>Connect Wallet</button>\n        {connectedAccount && (\n          <div>\n            <p>Connected: {shortAddress(connectedAccount)}</p>\n            {/* Add more UI elements or actions here */}\n          </div>\n        )}\n        </div>\n\n        <img src={skinImg} alt=\"Skin\" />\n\n        \n    \n\n      <br></br>\n      <button onClick={(event) => BuySkin(event)}>Buy Skin</button>\n      <button onClick={BuyConfirmed}>Buy Confirmed</button>\n      <br></br>\n\n  </>\n  );\n}\n\nexport default BuyDash;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}