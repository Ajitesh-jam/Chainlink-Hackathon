{"ast":null,"code":"var _jsxFileName = \"/Users/ajiteshjamulkar/Desktop/Chainlink-Hackathon/Website/app/src/components/SellSkinPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios'; // Make sure to import axios for making HTTP requests\nimport Web3 from \"web3\";\nimport { useParams } from 'react-router-dom';\n\n//let web3 = new Web3(window.ethereum); //Sepolia\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet web3 = new Web3(new Web3.providers.HttpProvider(\"HTTP://127.0.0.1:7545\")); //Ganache\nfunction SellSkin(props) {\n  _s();\n  const {\n    userName,\n    skinId\n  } = useParams();\n  let [price, setPrice] = useState(0);\n  let connectedAccount;\n  async function connectWallet() {\n    return web3.eth.getAccounts().then(accounts => {\n      price = 2;\n      return accounts[0];\n    });\n  }\n  async function sellSkin(event) {\n    event.preventDefault(); // Prevent form submission\n    connectedAccount = await connectWallet();\n    console.log(\"connectedAccount -- \", connectedAccount);\n    console.log(\"price -- \", price);\n\n    // try {\n    //     const url = `http://localhost:5001/${userName}/Sell/${skinId}`;\n    //     const response = await axios.post(url, {\n    //       price: price, // Sending only the price in the request body\n    //       WalletAddress:connectedAccount\n    //     });\n    //     console.log(response.data); // Log response data\n    //   } catch (error) {\n    //     console.error(\"Error\", error.message);\n    //   }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sellSkin,\n      children: \"Sell Skin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(SellSkin, \"d/swGf1BvUi/+BN3t5POzzkr3ek=\", false, function () {\n  return [useParams];\n});\n_c = SellSkin;\nexport default SellSkin;\nvar _c;\n$RefreshReg$(_c, \"SellSkin\");","map":{"version":3,"names":["React","useState","axios","Web3","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","web3","providers","HttpProvider","SellSkin","props","_s","userName","skinId","price","setPrice","connectedAccount","connectWallet","eth","getAccounts","then","accounts","sellSkin","event","preventDefault","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/ajiteshjamulkar/Desktop/Chainlink-Hackathon/Website/app/src/components/SellSkinPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios'; // Make sure to import axios for making HTTP requests\nimport Web3 from \"web3\";\nimport { useParams } from 'react-router-dom';\n\n//let web3 = new Web3(window.ethereum); //Sepolia\n\nlet web3 = new Web3(new Web3.providers.HttpProvider(\"HTTP://127.0.0.1:7545\")); //Ganache\nfunction SellSkin(props) {\n\n  const { userName, skinId } = useParams();\n\n  let [price, setPrice] = useState(0);\n  let connectedAccount;\n\n  async function connectWallet() {\n    return web3.eth.getAccounts().then((accounts) => {\n      price=2;\n\n      return accounts[0];\n    });\n  }\n\n\n\n  async function sellSkin(event) {\n    event.preventDefault(); // Prevent form submission\n    connectedAccount=await connectWallet();\n    console.log(\"connectedAccount -- \",connectedAccount);\n    console.log(\"price -- \",price);\n  \n\n\n    // try {\n    //     const url = `http://localhost:5001/${userName}/Sell/${skinId}`;\n    //     const response = await axios.post(url, {\n    //       price: price, // Sending only the price in the request body\n    //       WalletAddress:connectedAccount\n    //     });\n    //     console.log(response.data); // Log response data\n    //   } catch (error) {\n    //     console.error(\"Error\", error.message);\n    //   }\n     }\n\n  return (\n    <>\n      {/* <input\n        type='number'\n        value={price}\n        onChange={(e) => setPrice(e.target.value)} // Update price state when input changes\n        placeholder=\"Enter price\"\n      /> */}\n      <br />\n      <button onClick={sellSkin}>Sell Skin</button>\n    </>\n  );\n}\n\nexport default SellSkin;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;AAC3B,OAAOC,IAAI,MAAM,MAAM;AACvB,SAASC,SAAS,QAAQ,kBAAkB;;AAE5C;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEA,IAAIC,IAAI,GAAG,IAAIN,IAAI,CAAC,IAAIA,IAAI,CAACO,SAAS,CAACC,YAAY,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC;AAC/E,SAASC,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAEvB,MAAM;IAAEC,QAAQ;IAAEC;EAAO,CAAC,GAAGZ,SAAS,CAAC,CAAC;EAExC,IAAI,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC;EACnC,IAAIkB,gBAAgB;EAEpB,eAAeC,aAAaA,CAAA,EAAG;IAC7B,OAAOX,IAAI,CAACY,GAAG,CAACC,WAAW,CAAC,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;MAC/CP,KAAK,GAAC,CAAC;MAEP,OAAOO,QAAQ,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC;EACJ;EAIA,eAAeC,QAAQA,CAACC,KAAK,EAAE;IAC7BA,KAAK,CAACC,cAAc,CAAC,CAAC,CAAC,CAAC;IACxBR,gBAAgB,GAAC,MAAMC,aAAa,CAAC,CAAC;IACtCQ,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAACV,gBAAgB,CAAC;IACpDS,OAAO,CAACC,GAAG,CAAC,WAAW,EAACZ,KAAK,CAAC;;IAI9B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACC;EAEH,oBACEX,OAAA,CAAAE,SAAA;IAAAsB,QAAA,gBAOExB,OAAA;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACN5B,OAAA;MAAQ6B,OAAO,EAAEV,QAAS;MAAAK,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eAC7C,CAAC;AAEP;AAACpB,EAAA,CAjDQF,QAAQ;EAAA,QAEcR,SAAS;AAAA;AAAAgC,EAAA,GAF/BxB,QAAQ;AAmDjB,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}