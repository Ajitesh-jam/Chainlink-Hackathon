{"ast":null,"code":"var _jsxFileName = \"/Users/ajiteshjamulkar/Desktop/Chainlink-Hackathon/Website/app/src/components/SellSkinPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // Make sure to import axios for making HTTP requests\nimport Web3 from \"web3\";\nimport { useParams } from 'react-router-dom';\n\n//let web3 = new Web3(window.ethereum); //Sepolia\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet web3 = new Web3(new Web3.providers.HttpProvider(\"HTTP://127.0.0.1:7545\")); //Ganache\nfunction SellSkin(props) {\n  _s();\n  const {\n    userName,\n    skinId\n  } = useParams();\n  const [price, setPrice] = useState(0);\n  let connectedAccount;\n  const [sumPrice, setSumPrice] = useState(0);\n  useEffect(() => {\n    async function fetchSkins() {\n      try {\n        const url = `http://localhost:5001/${skinId}`;\n        const res = await axios.get(url);\n        const data = res.data;\n        if (Array.isArray(data)) {\n          console.log(data);\n          let sumPrice = 0;\n          for (let i = 0; i < data.length; i++) {\n            sumPrice += data[i].price;\n          }\n          console.log(\"sumPrice -- \", sumPrice);\n          console.log(\"Avg price -- \", sumPrice / data.length);\n          setSumPrice(sumPrice);\n        } else {\n          console.log('Expected an array but got:', typeof data);\n        }\n      } catch (e) {\n        console.log(\"Error fetching skins: \", e);\n      }\n    }\n    fetchSkins();\n  }, []); // Empty dependency array to ensure the effect runs only once\n\n  async function connectWallet() {\n    return web3.eth.getAccounts().then(accounts => {\n      return accounts[0];\n    });\n  }\n  async function sellSkin(event) {\n    event.preventDefault(); // Prevent form submission\n    connectedAccount = await connectWallet();\n    console.log(\"connectedAccount -- \", connectedAccount);\n\n    //show the current avg price \n\n    try {\n      const url = `http://localhost:5001/${userName}/Sell/${skinId}`;\n      const response = await axios.post(url, {\n        price: price,\n        // Sending only the price in the request body\n        WalletAddress: connectedAccount\n      });\n      console.log(response.data); // Log response data\n\n      //delete skin from user;\n      const url1 = `http://localhost:5001/${userName}/Skin/${skinId}`;\n      const response1 = await axios.put(url1);\n      console.log(response1.data); // Log response data\n    } catch (error) {\n      console.error(\"Error\", error.message);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: price,\n      onChange: e => setPrice(e.target.value) // Update price state when input changes\n      ,\n      placeholder: \"Enter price\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sellSkin,\n      children: \"Sell Skin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(SellSkin, \"wCVUbt5VEafjh9IIN5rX7RiyRV4=\", false, function () {\n  return [useParams];\n});\n_c = SellSkin;\nexport default SellSkin;\nvar _c;\n$RefreshReg$(_c, \"SellSkin\");","map":{"version":3,"names":["React","useState","useEffect","axios","Web3","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","web3","providers","HttpProvider","SellSkin","props","_s","userName","skinId","price","setPrice","connectedAccount","sumPrice","setSumPrice","fetchSkins","url","res","get","data","Array","isArray","console","log","i","length","e","connectWallet","eth","getAccounts","then","accounts","sellSkin","event","preventDefault","response","post","WalletAddress","url1","response1","put","error","message","children","type","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/ajiteshjamulkar/Desktop/Chainlink-Hackathon/Website/app/src/components/SellSkinPage.jsx"],"sourcesContent":["import React, { useState ,useEffect} from 'react';\nimport axios from 'axios'; // Make sure to import axios for making HTTP requests\nimport Web3 from \"web3\";\nimport { useParams } from 'react-router-dom';\n\n//let web3 = new Web3(window.ethereum); //Sepolia\n\nlet web3 = new Web3(new Web3.providers.HttpProvider(\"HTTP://127.0.0.1:7545\")); //Ganache\nfunction SellSkin(props) {\n\n  const { userName, skinId } = useParams();\n  const [price, setPrice] = useState(0);\n  let connectedAccount;\n  const [sumPrice, setSumPrice] = useState(0);\n\n  useEffect(() => {\n    async function fetchSkins() {\n      try {\n        const url = `http://localhost:5001/${skinId}`;\n        const res = await axios.get(url);\n        const data = res.data;\n        if (Array.isArray(data)) {\n          console.log(data);\n          let sumPrice = 0;\n          for (let i = 0; i < data.length; i++) {\n            sumPrice += data[i].price;\n          }\n          console.log(\"sumPrice -- \", sumPrice);\n          console.log(\"Avg price -- \", sumPrice / data.length);\n          setSumPrice(sumPrice);\n        } else {\n          console.log('Expected an array but got:', typeof data);\n        }\n      } catch (e) {\n        console.log(\"Error fetching skins: \", e);\n      }\n    }\n\n    fetchSkins();\n  }, []); // Empty dependency array to ensure the effect runs only once\n\n  async function connectWallet() {\n    return web3.eth.getAccounts().then((accounts) => {\n\n\n      return accounts[0];\n    });\n  }\n\n\n\n\n  async function sellSkin(event) {\n    event.preventDefault(); // Prevent form submission\n    connectedAccount=await connectWallet();\n    console.log(\"connectedAccount -- \",connectedAccount);\n\n    //show the current avg price \n\n    try {\n        const url = `http://localhost:5001/${userName}/Sell/${skinId}`;\n        const response = await axios.post(url, {\n          price: price, // Sending only the price in the request body\n          WalletAddress:connectedAccount\n        });\n\n        console.log(response.data); // Log response data\n\n        //delete skin from user;\n        const url1 = `http://localhost:5001/${userName}/Skin/${skinId}`;\n        const response1 = await axios.put(url1);\n        console.log(response1.data); // Log response data\n\n      } catch (error) {\n        console.error(\"Error\", error.message);\n      }\n\n  }\n\n  return (\n    <>\n      <input\n        type='number'\n        value={price}\n        onChange={(e) => setPrice(e.target.value)} // Update price state when input changes\n        placeholder=\"Enter price\"\n      />\n      <br />\n      <button onClick={sellSkin}>Sell Skin</button>\n    </>\n  );\n}\n\nexport default SellSkin;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}